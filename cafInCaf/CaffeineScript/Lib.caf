import &ArtStandardLib

deescapeSpaces: (string) ->
  array str, i from string.split /((?:\\\\)+)/
    if i %% 2 == 0
      str.replace /\\ /g, ' '
    else
      str
  .join ''


escapeNewLines: (string) -> string.replace /\n/g,  "\\n"

##
  IN:
    string - any string
    charsToEscape - string listing all the chars you want to escape
      Example: " $" escapes all not-already-escaped spaces and $

      Note, if charsToEscape contains a backslash, then we don't consider anything escaped.
      We simply escape every character specified in charsToEscape across string.

escapeMustEscapes: (string) ->
  string.replace /[\n]/g, '\\n'

escapeUnescaped: (string, charsToEscape = '"') ->
  charsRegExp = ///g ([#{escapeRegExp charsToEscape}])
  split = if charsToEscape.match /\\/
    [string]
  else
    string.split /((?:\\.)+)/

  array str, i from split
    if i %% 2 == 0
      str.replace
        charsRegExp
        '\\$1'
    else
      str

  .join ''

legalUnquotedPropName: legalUnquotedPropName = /^(0|[1-9][0-9]*|[a-z_][0-9_a-z]*)$/i

escapePropName: (rawPropName) ->
  if legalUnquotedPropName.test rawPropName
    rawPropName
  else
    escapeJavascriptString rawPropName

identifierRegexp:
  ///
    ^
    (?!\d)
    ( (?!\s) [$\w\u007f-\uffff] )+
    $
