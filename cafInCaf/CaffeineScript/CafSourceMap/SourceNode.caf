import &ArtStandardLib,  &ArtClassSystem, {} &SourceMapGenerator

class SourceNode extends BaseClass

  @property :sourceIndex :children

  constructor: (@sourceIndex, @children)->
    # [@children] = @children if @children is Array and @children.length <= 1 # mostly to make inspecting nicer

  @getter
    inspectedObjects: -> {} @sourceIndex, children: toInspectedObjects @children

  generate: (source, sourceFileName) ->
    new SourceMapGenerator source, sourceFileName
    .add @

  toString: (source, output = js: '') ->
    source ?= @children
    switch
    when source is String     then output.js += source
    when source is Array      then each child in source with @toString child, output when child?
    when source is SourceNode then source.toString null, output
    output.js
