import &StandardImport

class DestructuringIdentifierStn extends &BaseStn

  updateScope: (scope, options) ->
    @scope = scope
    @scope.addIdentifierAssigned @labeledChildren.identifier.identifier, undefined, options?.insideLet
    super

  @getter
    structuringStn: ->
      @labeledChildren.identifier

  # TODO: check that etc is only used on the last element of an array destructure - javascript limitations

  toSourceNode: (options)->
    {restructuring} = options if options

    {identifier, destructuringDefault} = @labeledChildren
    if restructuring
      identifier.toSourceNode()

    else
      @createSourceNode
        '...' if @props.ellipsis
        identifier.toSourceNode()
        if destructuringDefault then " = #{destructuringDefault.toSourceNode expression: true}"
