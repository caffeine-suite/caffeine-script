import &StandardImport

class BreakStatementStn extends &BaseStn

  validate: ->
    p = @findParent /^(Class|Comprehension|FunctionDefinition|While|Switch|ControlOperator)$/
    switch
    when !p? then throw new Error "'break' not allowed in root context."
    when /^(Comprehension)/.test(p.type) && p.getGeneratesInlineIteration() then null
    when /^(While)/.test p.type then null
    else
      throw new Error "'break' not allowed in these contexts: root, class or comprehesions without an 'in/from-array' or 'in/from-object' clause"

  toSourceNode: ->
    p = @findParent /^(While)$/

    @createSourceNode
      switch
      when p.captureResultsAs
        []
          p.captureResultsAs.toSourceNode()
          " = "
          @children[0]?.toSourceNode()
          ? :undefined
          "; break"

      when p.usedAsExpression && @children[0]
        []
          "return "
          @children[0].toSourceNode()

      else
        :break
