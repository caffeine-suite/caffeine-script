import &StandardImport


class DestructuringAssignmentStn extends &BaseStn

  toSourceNode: (options) ->
    {expression, returnValueIsIgnored, noParens} = options if options
    {structure, value} = @labeledChildren
    expression = null if returnValueIsIgnored

    @createSourceNode
      "(" unless noParens
      structure.toSourceNode()
      " = "
      value.toSourceNode expression: true
      expression && ", "
      expression && structure.toSourceNode restructuringStart: true
      ")" unless noParens

  # toJs: (options)->
  #   {expression, returnValueIsIgnored} = options if options
  #   {structure, value} = @labeledChildren

  #   expression = null if returnValueIsIgnored

  #   if expression
  #     "(#{structure.toJs()} = #{value.toJsExpression()}, #{structure.toJs restructuringStart: true})"
  #   else
  #     "(#{structure.toJs()} = #{value.toJsExpression()})"
