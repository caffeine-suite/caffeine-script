import &StandardImport, &CaffeineEight

extractExpression:
  "" extractSource:value _ /extract/ conditionalExtract:conditionalExtract? extractActions
  stnFactory: :ExtractStn
  stnProps: -> conditional: !!@conditionalExtract

extractActions:
  "" _ extractionTarget
  "" _? extractBodyBlock

extractBodyBlock:  Extensions.IndentBlocks.getPropsToSubparseBlock rule: :extractBody

extractBody: "end* extractBodyLine+"
extractBodyLine: "extractionTarget end"

conditionalExtract:
  /\?/

extractionTarget:
  :objectExtractionList

objectExtractionList:
  "" extractAction:extractAction _comma_optionalNewLine objectExtractionList
  "" extractAction:extractAction

extractAction:
  :chainExtract
  :extractToIdentifier

chainExtract:
  "" extractSource:extractToIdentifier _ /extract/ conditionalExtract:conditionalExtract? extractActions
  stnFactory: :ExtractStn
  stnProps: -> conditional: !!@conditionalExtract

extractDefault: "_? '=' _? expression"

extractAs: "_ 'as' _ identifier"

extractPathExtension:
  "" dot extractPathExtension:identifier
  # "" conditionalExtract:conditionalExtract? dot extractPathExtension:identifier
  # getStn: ->
  #   stn = @extractPathExtension.getStn()
  #   stn.props.conditional = !!@conditionalExtract
  #   stn

extractToIdentifier:
  "" bastIdentifier:identifier extractPathExtension* extractAs:extractAs? extractDefault:extractDefault?
  stnFactory: :ExtractToIdentifierStn
